// ECG-data
float y_data[] = { 60, 60, 60, 61, 61, 61, 62, 62, 63, 63, 63, 64, 65, 65, 66, 66, 67, 68, 69, 70, 70, 70, 71, 71, 71, 72, 72, 72, 73, 73, 74, 74, 75, 75, 76, 76, 76, 77, 77, 78, 78, 78, 79, 79, 79, 79, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 79, 79, 79, 79, 79, 79, 79, 78, 78, 78, 78, 77, 77, 77, 76, 76, 76, 76, 75, 75, 75, 75, 74, 74, 74, 73, 73, 72, 72, 72, 71, 71, 71, 70, 70, 70, 69, 69, 69, 68, 68, 67, 67, 66, 66, 65, 64, 64, 63, 63, 62, 62, 61, 61, 61, 61, 60, 60, 60, 60, 60, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 59, 59, 59, 59, 59, 58, 58, 58, 57, 57, 56, 56, 55, 54, 51, 46, 38, 35, 32, 40, 44, 47, 50, 56, 61, 64, 67, 70, 77, 84, 91, 130, 140, 155, 159, 162, 165, 168, 193, 196, 199, 201, 207, 213, 218, 224, 238, 240, 243, 237, 215, 216, 206, 191, 176, 176, 139, 141, 118, 108, 102, 62, 56, 22, 24, 13, 2, 2, 4, 6, 7, 10, 15, 17, 18, 19, 20, 21, 23, 25, 27, 30, 34, 38, 41, 44, 47, 50, 52, 54, 55, 56, 58, 59, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 62, 62, 62, 62, 62, 62, 62, 62, 63, 63, 63, 63, 64, 64, 64, 65, 65, 65, 65, 66, 66, 66, 67, 67, 67, 68, 68, 68, 69, 69, 70, 70, 70, 71, 71, 72, 72, 73, 73, 74, 74, 74, 75, 75, 75, 76, 76, 76, 77, 77, 78, 78, 78, 78, 79, 79, 79, 80, 80, 81, 81, 82, 82, 83, 83, 83, 84, 84, 84, 84, 84, 84, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 84, 84, 84, 84, 84, 84, 84, 83, 83, 83, 83, 83, 83, 83, 82, 82, 82, 82, 81, 81, 81, 80, 80, 79, 79, 79, 79, 78, 78, 78, 77, 77, 76, 76, 76, 75, 75, 74, 74, 73, 73, 72, 72, 72, 71, 71, 71, 70, 70, 70, 70, 69, 69, 68, 68, 67, 67, 67, 66, 66, 66, 65, 65, 65, 64, 64, 64, 64, 63, 63, 63, 63, 62, 62, 61};
byte cnt = 0;       // counter for the frequenzy "randomizer"
int del = 3000;     // delay in mircosenconds
int delAcc = 3000;  // approximation for the new delay
float mult = 8.0;       // multiplying factor for output

void setup() {
  analogWriteResolution(12);
}

void loop() {

  for (byte i = 0; i < 255; i++) {  // ECG output routine
    for (float j = 1; j < 20.0; j++) { // interlace the signal
      analogWrite(A14, (y_data[i] + ((y_data[i + 1] - y_data[i]) / 20.0 * j))*mult);
      delayMicroseconds(del / 20);
    }
  }
  
  cnt++;
  if (cnt >= 10) {    // when count is greater then 10 change frequenzy
    cnt = 0;
    del += random(-100, 100);
    if (del <= 3000) {
      del = 3000;
    }
    if (del >= 6000) {
      del = 6000;
    }
  }
  if (delAcc < del) { // approximation to the new frequenzy 
    delAcc += 10;
  }
  if (delAcc > del) {
    delAcc -= 10;
  }
}
